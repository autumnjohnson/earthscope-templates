apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data
  namespace: monitoring
spec:
  storageClassName: "nfs-dynamic"
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:7.3.4-ubuntu
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
            limits:
              cpu: 1
              memory: 2.5Gi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: data
            - mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
              name: grafana-ini
              readOnly: true
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: grafana-data
        - name: grafana-ini
          configMap:
            name: grafana-ini

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  selector:
    app: grafana
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-monitoring
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
spec:
  rules:
  - host: "www-dev1.ds.iris.edu"
    http:
      paths:
      - path: /pegacorn/monitoring(.*)
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
  tls:
  - hosts:
    - "data.isi.edu"
    secretName: data-isi-edu




